{:aliases  {:dev {:extra-paths ["development/src"
                                "components/lax/src"
                                "components/api-raml/src"
                                "components/recommendations/src"
                                "components/recommendations2/src"
                                "components/journal-cms/src"
                                "components/search/src"
                                
                                "bases/command-line/src"
                                "bases/command-line/resources"
                                "bases/http-server/src"
                                "bases/http-server/resources"
                                ]

                  :extra-deps {org.clojure/clojure {:mvn/version "1.11.0"}
                               orchestra/orchestra {:mvn/version "2021.01.01-1"}
                               org.clojure/tools.namespace {:mvn/version "1.3.0"} ;; reload code

                               clj-commons/fs {:mvn/version "1.6.307"} ;; file system wrangling                               

                               ;; components
                               poly/lax {:local/root "components/lax"}
                               poly/api-raml {:local/root "components/api-raml"}
                               poly/recommendations {:local/root "components/recommendations"}
                               poly/recommendations2 {:local/root "components/recommendations2"}
                               poly/journal-cms {:local/root "components/journal-cms"}
                               poly/search {:local/root "components/search"}

                               ;; bases
                               poly/http-server {:local/root "bases/http-server"}

                               }
                  }

            :test {:extra-paths ["bases/command-line/test"

                                 "components/lax/test"
                                 "components/api-raml/test"
                                 "components/recommendations/test"
                                 "components/recommendations2/test"
                                 "components/journal-cms/test"
                                 "components/search/test"

                                 "bases/http-server/test"

                                 
                                 ]

                   :extra-deps {;;[gui-diff "0.6.7" :exclusions [net.cgrant/parsley]] ;; pops up a graphical diff for test results
                                gui-diff/gui-diff {:mvn/version "0.6.7"
                                                   :exclusions [net.cgrant/parsley]
                                                   }
                                org.flatland/ordered {:mvn/version "1.5.9"} ;; better ordered map
                                }
                   }

            :repl {:extra-deps {com.bhauman/rebel-readline {:mvn/version "0.1.4"}
                                }
                   ;; https://old.reddit.com/r/Clojure/comments/fzjyw8/depsedn_how_to_declare_init_ns_and_init_fn_for_a/
                   :main-opts  ["-e" "(require,'[ppp.command-line.core])"
                                "-e" "(in-ns,'ppp.command-line.core)"
                                "-m" "rebel-readline.main"
                                ]
                   }

            ;; :run { ... a tool that accepts a project name and then finds and runs it ... }
            
            :poly {:main-opts ["-m" "polylith.clj.core.poly-cli.core"]
                   :extra-deps {polyfy/polylith
                                {:git/url   "https://github.com/polyfy/polylith"
                                 :sha       "349875fa6898d5f8c785c0d7279e6d35c7a39086"
                                 :deps/root "projects/poly"}}}

            ;; tool, execute with `clj -T:build <fn> [<key> <val>, ...]`
            ;; for example, `clj -T:build uberjar :project http-server`
            ;; alias added to `.dir-locals.el` for dev with cider-jack-in, use `(require '[build])`
            :build {:deps {io.github.clojure/tools.build {:git/tag "v0.8.3" :git/sha "0d20256"}
                           ;; convenience tasks you would find in lein but not provided in deps.edn,
                           ;; like clean, jar, uber, test, etc
                           io.github.seancorfield/build-clj {:git/tag "v0.5.2" :git/sha "8f75b81088b9809ec3cfc34e951036b3975007fd"}
                           }
                    :paths ["build/resources"]
                    :ns-default build
                    :extra-paths ["."]
                    }

            ;; see 'cli' bash script
            :cli {:main-opts  ["-m" "ppp.command-line.core"]}

            ;; see 'http-server' bash script
            :http-server {:main-opts ["-m" "ppp.http-server.core"]}
            }
 }
