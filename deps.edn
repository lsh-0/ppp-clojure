{:aliases  {:dev {:extra-paths ["development/src"
                                "components/user/src"
                                "components/user/resources"
                                "components/lax/src"
                                "components/api-raml/src"
                                "bases/cli/src"
                                "bases/cli/resources"
                                "bases/http-server/src"
                                "bases/http-server/resources"
                                ]

                  :extra-deps {org.clojure/clojure {:mvn/version "1.11.0"}
                               poly/api-raml {:local/root "components/api-raml"}
                               poly/lax {:local/root "components/lax"}
                               orchestra/orchestra {:mvn/version "2021.01.01-1"}                               
                               poly/user {:local/root "components/user"}

                               poly/http-server {:local/root "bases/http-server"}

                               }
                  
                  }

            :test {:extra-paths ["components/user/test"
                                 "bases/cli/test"
                                 ]}

            :repl {:extra-deps {com.bhauman/rebel-readline {:mvn/version "0.1.4"}
                                }
                   ;; https://old.reddit.com/r/Clojure/comments/fzjyw8/depsedn_how_to_declare_init_ns_and_init_fn_for_a/
                   :main-opts  ["-e" "(require,'[ppp.cli.core])"
                                "-e" "(in-ns,'ppp.cli.core)"
                                "-m" "rebel-readline.main"
                                ]
                   }

            :poly {:main-opts ["-m" "polylith.clj.core.poly-cli.core"]
                   :extra-deps {polyfy/polylith
                                {:git/url   "https://github.com/polyfy/polylith"
                                 :sha       "349875fa6898d5f8c785c0d7279e6d35c7a39086"
                                 :deps/root "projects/poly"}}}
            
            ;; tool, execute with `clj -T:build <fn> [<key> <val>, ...]`
            ;; for example, `clj -T:build uberjar :project http-server`
            ;; alias added to `.dir-locals.el` for dev with cider-jack-in, use `(require '[build])`
            :build {:deps {io.github.clojure/tools.build {:git/tag "v0.8.3" :git/sha "0d20256"}
                           ;; convenience tasks you would find in lein but not provided in deps.edn,
                           ;; like clean, jar, uber, test, etc
                           io.github.seancorfield/build-clj {:git/tag "v0.5.2" :git/sha "8f75b81088b9809ec3cfc34e951036b3975007fd"}
                           }
                    :paths ["build/resources"]  
                    :ns-default build
                    :extra-paths ["."]
                    }
            }
 }
